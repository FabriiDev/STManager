// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Caja", b =>
                {
                    b.Property<int>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_caja");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCaja"));

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_apertura");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_cierre");

                    b.Property<int>("IdUsuarioApertura")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_apertura");

                    b.Property<int?>("IdUsuarioCierre")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_cierre");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observaciones");

                    b.Property<decimal>("TotalOrdenes")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_ordenes");

                    b.Property<decimal>("TotalVentas")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_ventas");

                    b.HasKey("IdCaja");

                    b.HasIndex("IdUsuarioApertura");

                    b.HasIndex("IdUsuarioCierre");

                    b.ToTable("caja");
                });

            modelBuilder.Entity("api.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apellido");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("celular");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre");

                    b.Property<string>("Otros")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("otros");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("api.Models.Configuracion", b =>
                {
                    b.Property<int>("IdConfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_configuracion");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdConfiguracion"));

                    b.Property<string>("DireccionTaller")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion_taller");

                    b.Property<string>("Eslogan")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("eslogan");

                    b.Property<string>("NombreTaller")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre_taller");

                    b.Property<string>("TelefonoTaller")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("telefono_taller");

                    b.Property<string>("TextoLegal")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("texto_legal");

                    b.Property<string>("TextoPie")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("texto_pie");

                    b.Property<string>("UrlLogo")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_logo");

                    b.Property<decimal>("ValorDiagnostico")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("valor_diagnostico");

                    b.HasKey("IdConfiguracion");

                    b.ToTable("configuracion");
                });

            modelBuilder.Entity("api.Models.DetalleOrdenProducto", b =>
                {
                    b.Property<int>("IdDetalleOrdenProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleOrdenProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<int>("NroOrden")
                        .HasColumnType("int")
                        .HasColumnName("nro_orden");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio_unitario");

                    b.HasKey("IdDetalleOrdenProducto");

                    b.HasIndex("IdProducto");

                    b.HasIndex("NroOrden");

                    b.ToTable("detalle_orden_producto");
                });

            modelBuilder.Entity("api.Models.DetalleOrdenServicio", b =>
                {
                    b.Property<int>("IdDetalleOrdenServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleOrdenServicio"));

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio");

                    b.HasKey("IdDetalleOrdenServicio");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdServicio");

                    b.ToTable("detalle_orden_servicio");
                });

            modelBuilder.Entity("api.Models.DetalleVentaProducto", b =>
                {
                    b.Property<int>("IdDetalleVentaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleVentaProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio_unitario");

                    b.HasKey("IdDetalleVentaProducto");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("detalle_venta_producto");
                });

            modelBuilder.Entity("api.Models.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_equipo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEquipo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdMarcaEquipo")
                        .HasColumnType("int");

                    b.Property<int>("IdModeloEquipo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo_equipo");

                    b.Property<int>("IdTipoEquipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_equipo");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("numero_serie");

                    b.HasKey("IdEquipo");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMarcaEquipo");

                    b.HasIndex("IdModeloEquipo");

                    b.HasIndex("IdTipoEquipo");

                    b.ToTable("equipo");
                });

            modelBuilder.Entity("api.Models.EquipoMarca", b =>
                {
                    b.Property<int>("IdMarcaEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca_equipo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMarcaEquipo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("marca");

                    b.HasKey("IdMarcaEquipo");

                    b.ToTable("equipo_marca");
                });

            modelBuilder.Entity("api.Models.EquipoModelo", b =>
                {
                    b.Property<int>("IdModeloEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_modelo_equipo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdModeloEquipo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<int>("IdMarcaEquipo")
                        .HasColumnType("int")
                        .HasColumnName("id_marca_equipo");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modelo");

                    b.HasKey("IdModeloEquipo");

                    b.HasIndex("IdMarcaEquipo");

                    b.ToTable("equipo_modelo");
                });

            modelBuilder.Entity("api.Models.EquipoTipo", b =>
                {
                    b.Property<int>("IdTipoEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_equipo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipoEquipo"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTipoEquipo");

                    b.ToTable("equipo_tipo");
                });

            modelBuilder.Entity("api.Models.Gasto", b =>
                {
                    b.Property<int>("IdGasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_gasto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdGasto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaGasto")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_gasto");

                    b.Property<int>("IdCaja")
                        .HasColumnType("int")
                        .HasColumnName("id_caja");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("id_metodo_pago");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("monto");

                    b.HasKey("IdGasto");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex("IdUsuario");

                    b.ToTable("gasto");
                });

            modelBuilder.Entity("api.Models.Impresion3D", b =>
                {
                    b.Property<int>("IdImpresion3D")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_impresion_3d");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdImpresion3D"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Entregada")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("entregada");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_entrega");

                    b.Property<DateTime>("FechaEstimadaEntrega")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_estimada_entrega");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_ingreso");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("IdImpresion3D");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVenta");

                    b.ToTable("impresion_3d");
                });

            modelBuilder.Entity("api.Models.ImpresionItem", b =>
                {
                    b.Property<int>("IdImpresionItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_impresion_item");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdImpresionItem"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdImpresion3D")
                        .HasColumnType("int")
                        .HasColumnName("id_impresion_3d");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int")
                        .HasColumnName("id_material");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio_unitario");

                    b.HasKey("IdImpresionItem");

                    b.HasIndex("IdImpresion3D");

                    b.HasIndex("IdMaterial");

                    b.ToTable("impresion_item");
                });

            modelBuilder.Entity("api.Models.ImpresionMaterial", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_material");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMaterial"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_material");

                    b.HasKey("IdMaterial");

                    b.ToTable("impresion_material");
                });

            modelBuilder.Entity("api.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_metodo_pago");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("metodo");

                    b.HasKey("IdMetodoPago");

                    b.ToTable("metodo_pago");
                });

            modelBuilder.Entity("api.Models.Orden", b =>
                {
                    b.Property<int>("NroOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nro_orden");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NroOrden"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<bool>("Cargador")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("cargador");

                    b.Property<string>("DetalleTecnico")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("detalle_tecnico");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("diagnostico");

                    b.Property<bool>("Entregada")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("entregada");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("Extras")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("extras");

                    b.Property<string>("Falla")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("falla");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_entrega");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_ingreso");

                    b.Property<DateTime?>("FechaPresupuesto")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_presupuesto");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int")
                        .HasColumnName("id_equipo");

                    b.Property<int>("IdUsuarioAsignado")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_asignado");

                    b.Property<int>("IdUsuarioCreador")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_creador");

                    b.Property<int?>("IdUsuarioEntrega")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_entrega");

                    b.Property<bool>("PagoDiagnostico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("pago_diagnostico");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("presupuesto");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("NroOrden");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEquipo");

                    b.HasIndex("IdUsuarioAsignado");

                    b.HasIndex("IdUsuarioCreador");

                    b.HasIndex("IdUsuarioEntrega");

                    b.ToTable("orden");
                });

            modelBuilder.Entity("api.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdImagenProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_imagen_producto");

                    b.Property<int>("IdMarcaProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_marca_producto");

                    b.Property<int>("IdModeloProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo_producto");

                    b.Property<int>("IdTipoProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_producto");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdImagenProducto");

                    b.HasIndex("IdMarcaProducto");

                    b.HasIndex("IdModeloProducto");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("api.Models.ProductoImagen", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_imagen");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdImagen"));

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_imagen");

                    b.HasKey("IdImagen");

                    b.ToTable("producto_imagen");
                });

            modelBuilder.Entity("api.Models.ProductoMarca", b =>
                {
                    b.Property<int>("IdMarcaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca_producto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMarcaProducto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("MarcaProducto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("marca_producto");

                    b.HasKey("IdMarcaProducto");

                    b.ToTable("producto_marca");
                });

            modelBuilder.Entity("api.Models.ProductoModelo", b =>
                {
                    b.Property<int>("IdModeloProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_modelo_producto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdModeloProducto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<int>("IdMarcaProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_marca_producto");

                    b.Property<string>("ModeloProducto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modelo_producto");

                    b.HasKey("IdModeloProducto");

                    b.HasIndex("IdMarcaProducto");

                    b.ToTable("producto_modelo");
                });

            modelBuilder.Entity("api.Models.ProductoTipo", b =>
                {
                    b.Property<int>("IdTipoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_producto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipoProducto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("TipoProducto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tipo_producto");

                    b.HasKey("IdTipoProducto");

                    b.ToTable("producto_tipo");
                });

            modelBuilder.Entity("api.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio");

                    b.HasKey("IdServicio");

                    b.ToTable("servicio");
                });

            modelBuilder.Entity("api.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nick");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("rol");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("api.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<bool>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("tinyint(50)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_venta");

                    b.Property<int>("IdCaja")
                        .HasColumnType("int")
                        .HasColumnName("id_caja");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("id_metodo_pago");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex("IdUsuario");

                    b.ToTable("venta");
                });

            modelBuilder.Entity("api.Models.Caja", b =>
                {
                    b.HasOne("api.Models.Usuario", "UsuarioApertura")
                        .WithMany()
                        .HasForeignKey("IdUsuarioApertura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "UsuarioCierre")
                        .WithMany()
                        .HasForeignKey("IdUsuarioCierre");

                    b.Navigation("UsuarioApertura");

                    b.Navigation("UsuarioCierre");
                });

            modelBuilder.Entity("api.Models.DetalleOrdenProducto", b =>
                {
                    b.HasOne("api.Models.Producto", "Producto")
                        .WithMany("DetallesOrdenProducto")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Orden", "Orden")
                        .WithMany("DetallesOrdenProducto")
                        .HasForeignKey("NroOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("api.Models.DetalleOrdenServicio", b =>
                {
                    b.HasOne("api.Models.Orden", "Orden")
                        .WithMany("DetalleOrdenServicios")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Servicio", "Servicio")
                        .WithMany("DetallesOrdenServicio")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("api.Models.DetalleVentaProducto", b =>
                {
                    b.HasOne("api.Models.Producto", "Producto")
                        .WithMany("DetallesVentaProducto")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Venta", "Venta")
                        .WithMany("DetallesVentaProducto")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("api.Models.Equipo", b =>
                {
                    b.HasOne("api.Models.Cliente", "Cliente")
                        .WithMany("Equipos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.EquipoMarca", "EquipoMarca")
                        .WithMany()
                        .HasForeignKey("IdMarcaEquipo");

                    b.HasOne("api.Models.EquipoModelo", "EquipoModelo")
                        .WithMany("Equipos")
                        .HasForeignKey("IdModeloEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.EquipoTipo", "EquipoTipo")
                        .WithMany("Equipos")
                        .HasForeignKey("IdTipoEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EquipoMarca");

                    b.Navigation("EquipoModelo");

                    b.Navigation("EquipoTipo");
                });

            modelBuilder.Entity("api.Models.EquipoModelo", b =>
                {
                    b.HasOne("api.Models.EquipoMarca", "EquipoMarca")
                        .WithMany("EquipoModelos")
                        .HasForeignKey("IdMarcaEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoMarca");
                });

            modelBuilder.Entity("api.Models.Gasto", b =>
                {
                    b.HasOne("api.Models.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("MetodoPago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api.Models.Impresion3D", b =>
                {
                    b.HasOne("api.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("IdVenta");

                    b.Navigation("Cliente");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("api.Models.ImpresionItem", b =>
                {
                    b.HasOne("api.Models.Impresion3D", "Impresion3D")
                        .WithMany("Items")
                        .HasForeignKey("IdImpresion3D")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ImpresionMaterial", "ImpresionMaterial")
                        .WithMany("Items")
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Impresion3D");

                    b.Navigation("ImpresionMaterial");
                });

            modelBuilder.Entity("api.Models.Orden", b =>
                {
                    b.HasOne("api.Models.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Equipo", "Equipo")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "UsuarioAsignado")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAsignado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("IdUsuarioCreador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "UsuarioEntrega")
                        .WithMany()
                        .HasForeignKey("IdUsuarioEntrega");

                    b.Navigation("Cliente");

                    b.Navigation("Equipo");

                    b.Navigation("UsuarioAsignado");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEntrega");
                });

            modelBuilder.Entity("api.Models.Producto", b =>
                {
                    b.HasOne("api.Models.ProductoImagen", "ImagenProducto")
                        .WithMany()
                        .HasForeignKey("IdImagenProducto");

                    b.HasOne("api.Models.ProductoMarca", "MarcaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarcaProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ProductoModelo", "ModeloProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdModeloProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ProductoTipo", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdTipoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImagenProducto");

                    b.Navigation("MarcaProducto");

                    b.Navigation("ModeloProducto");

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("api.Models.ProductoModelo", b =>
                {
                    b.HasOne("api.Models.ProductoMarca", "MarcaProducto")
                        .WithMany()
                        .HasForeignKey("IdMarcaProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarcaProducto");
                });

            modelBuilder.Entity("api.Models.Venta", b =>
                {
                    b.HasOne("api.Models.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("MetodoPago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api.Models.Cliente", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("api.Models.Equipo", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("api.Models.EquipoMarca", b =>
                {
                    b.Navigation("EquipoModelos");
                });

            modelBuilder.Entity("api.Models.EquipoModelo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("api.Models.EquipoTipo", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("api.Models.Impresion3D", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("api.Models.ImpresionMaterial", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("api.Models.Orden", b =>
                {
                    b.Navigation("DetalleOrdenServicios");

                    b.Navigation("DetallesOrdenProducto");
                });

            modelBuilder.Entity("api.Models.Producto", b =>
                {
                    b.Navigation("DetallesOrdenProducto");

                    b.Navigation("DetallesVentaProducto");
                });

            modelBuilder.Entity("api.Models.ProductoMarca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("api.Models.ProductoModelo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("api.Models.ProductoTipo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("api.Models.Servicio", b =>
                {
                    b.Navigation("DetallesOrdenServicio");
                });

            modelBuilder.Entity("api.Models.Venta", b =>
                {
                    b.Navigation("DetallesVentaProducto");
                });
#pragma warning restore 612, 618
        }
    }
}
